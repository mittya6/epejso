<!DOCTYPE html>
<html lang="ja" class="scroll-smooth">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">

    <title><%- Title %></title>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.5.1/highlight.min.js"
        integrity="sha512-yUUc0qWm2rhM7X0EFe82LNnv2moqArj5nro/w1bi05A09hRVeIZbN6jlMoyu0+4I/Bu4Ck/85JQIU82T82M28w=="
        crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.5.1/styles/a11y-light.min.css"
        integrity="sha512-WDk6RzwygsN9KecRHAfm9HTN87LQjqdygDmkHSJxVkVI7ErCZ8ZWxP6T8RvBujY1n2/E4Ac+bn2ChXnp5rnnHA=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
    <script>hljs.initHighlightingOnLoad();</script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/AlertifyJS/1.13.1/alertify.min.js"
        integrity="sha512-JnjG+Wt53GspUQXQhc+c4j8SBERsgJAoHeehagKHlxQN+MtCCmFDghX9/AcbkkNRZptyZU4zC8utK59M5L45Iw=="
        crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/AlertifyJS/1.13.1/css/alertify.min.css"
        integrity="sha512-IXuoq1aFd2wXs4NqGskwX2Vb+I8UJ+tGJEu/Dc0zwLNKeQ7CW3Sr6v0yU3z5OQWe3eScVIkER4J9L7byrgR/fA=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />

    <script src="https://cdnjs.cloudflare.com/ajax/libs/basicLightbox/5.0.4/basicLightbox.min.js"
        integrity="sha512-ycqisnM5/8n5gDxYe0MTYoW+5DDuupgGdbdsJ9zcu66ZszaKh4JGsmjzyi7jJY4AjynXc43DOba/m+yVGmv+wQ=="
        crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/basicLightbox/5.0.4/basicLightbox.min.css"
        integrity="sha512-yNvWz1C0Io3RxC18Hrqh/V+bFUlqSt3aVAtTF7xggTqr9JnV2ZQOGrd4gyaErdDgDOFK5nb/HQL1Q/j7ehmOow=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />


    <link href="https://cdn.jsdelivr.net/npm/daisyui@2.14.2/dist/full.css" rel="stylesheet" type="text/css" />

    <script src="https://cdn.tailwindcss.com"></script>
    <style type="text/tailwindcss">
        @layer base {

            header h1{
                @apply text-3xl text-stone-500;
            }

            main h1{
                @apply text-2xl font-medium leading-normal text-teal-600;
                @apply mt-0 pb-2 mb-4;
                @apply border-b-2 border-stone-500;
            }

            main h1:not(:first-child){
                @apply mt-16;
            }

            main h2{
                @apply text-xl font-medium leading-normal mt-0 mb-2 text-stone-700;
                @apply mt-4 mb-2;
                @apply inline-block border-b-2 border-stone-500;
            }

            main h3{
                @apply text-lg font-medium leading-normal mt-0 mb-2 text-stone-500;
                @apply mt-4 mb-2;
            }

            main p{
                @apply leading-7;
            }

            main pre{
                @apply relative;
                @apply overflow-x-auto;
                @apply border border-black;
                @apply mt-2;
            }

            main pre button {
                @apply absolute top-2 right-4;
                @apply text-white bg-gradient-to-r from-cyan-400 via-cyan-500 to-cyan-600 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-cyan-300 dark:focus:ring-cyan-800 shadow-lg shadow-cyan-500/50 dark:shadow-lg dark:shadow-cyan-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2;
            }

            dt:after{
                content:":"
            }

            main img{
                @apply cursor-pointer;
            }

            main strong{
                background: linear-gradient(transparent 40%, yellow 40%);
                @apply font-normal;
            }

            ul{
                @apply list-disc;
                @apply ml-4 mb-2;
            }

            ol{
                @apply list-decimal;
                @apply ml-4 mb-2;
            }

            table{
                @apply table-auto text-sm text-left text-gray-500;
            }

            th{
                @apply text-xs text-gray-700;
                @apply px-6 py-3
            }

            tr{
                @apply bg-white border-b;
            }

            td{
                @apply px-6 py-4;
            }
        }
    </style>
    <style>
        * {
            font-family: 'Noto Sans JP', "Helvetica Neue", Arial, "Hiragino Kaku Gothic ProN", "Hiragino Sans", Meiryo, sans-serif;
        }
    </style>
    <script>
        let ScrollSpy = class {
            constructor(selector, classlist) {
                this.selector = document.querySelectorAll(selector);
                const options = {
                    root: null,
                    rootMargin: `0px`,
                    threshold: 0
                };
                const observer = new IntersectionObserver(this.doWhenIntersect.bind(this), options);
                this.classlist = classlist;
                this.previousMapping = new Map();
                let lastEle;
                this.mapping = new Map();
                [...this.selector].forEach((tarEle) => {
                    if (!tarEle.id) {
                        return;
                    }
                    let targetEles = document.querySelectorAll(`a[href="#${tarEle.id}"]`);
                    if (!targetEles || targetEles.length == 0) {
                        return;
                    }
                    this.mapping.set(tarEle.id, [...targetEles]);
                    observer.observe(tarEle);
                    if (lastEle) {
                        this.previousMapping.set(tarEle.id, lastEle);
                    }
                    lastEle = tarEle;
                });
            }
            doWhenIntersect(entries) {

                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        let clientRect = entry.target.getBoundingClientRect();
                        let tarEles;
                        if (clientRect.top > window.innerHeight) {
                            tarEles = this.previousMapping.get(entry.target.id);
                        } else {
                            tarEles = this.mapping.get(entry.target.id);
                        }
                        if (this.lastEle === entry.target) {
                            return;
                        }
                        if (this.lastEle) {
                            this.mapping.get(this.lastEle.id).forEach((tarEle) => {
                                tarEle.parentElement.classList.remove(...this.classlist);
                            });
                        }
                        tarEles.forEach((tarEle) => {
                            tarEle.parentElement.classList.add(...this.classlist);
                        });
                        this.lastEle = entry.target;
                    }
                });
            }
        };
    </script>
    <script>
        window.addEventListener('DOMContentLoaded', (event) => {

            let stepUl = document.querySelector('#steps');
            document.querySelectorAll("main h1").forEach((tarheading, index) => {
                tarheading.id = 'tarheading' + index;

                let curLi = document.createElement('li');
                curLi.classList.add("step","text-sm");
                let curA = document.createElement('a');
                curA.href = `#${tarheading.id}`;
                curA.innerText = tarheading.innerText;

                curLi.appendChild(curA);
                stepUl.appendChild(curLi);
            });

            new ScrollSpy("main h1", ["step-secondary"]);

            document.querySelectorAll("main pre").forEach((tarPre, index) => {
                let curButton = document.createElement('button');
                curButton.innerText = 'copy';
                curButton.addEventListener('click', () => {
                    let text = curButton.parentElement.querySelector('code').innerText;
                    execCopy(text);
                    alertify.success('Copied');

                });
                tarPre.appendChild(curButton);
            });

            document.querySelectorAll("main img").forEach((tarImg, index) => {
                const instance = basicLightbox.create(`<img src="${tarImg.src}">`);
                tarImg.addEventListener('click', () => {
                    //instance.show();
                });
            });



        });

        function execCopy(string) {
            // 空div 生成
            var tmp = document.createElement("div");
            // 選択用のタグ生成
            var pre = document.createElement('pre');
            // 親要素のCSSで user-select: none だとコピーできないので書き換える
            pre.style.webkitUserSelect = 'auto';
            pre.style.userSelect = 'auto';
            tmp.appendChild(pre).textContent = string;
            // 要素を画面外へ
            var s = tmp.style;
            s.position = 'fixed';
            s.right = '200%';
            // body に追加
            document.body.appendChild(tmp);
            // 要素を選択
            document.getSelection().selectAllChildren(tmp);
            // クリップボードにコピー
            var result = document.execCommand("copy");
            // 要素削除
            document.body.removeChild(tmp);
            return result;
        }
    </script>
</head>

<body>

    <header>
        <div class="flex items-center justify-center h-32">
            <h1>
                <%- Title %>
            </h1>
        </div>
    </header>

    <div class="flex mx-12">
        <aside class="w-96 h-screen sticky top-0 py-4 hidden md:block">
            <div class="pl-2 h-full w-full flex items-center border border-black rounded-xl overflow-y-auto">
                <ul class="steps steps-vertical " id="steps">
                </ul>
            </div>
        </aside>
        <main class="grow max-w-xl max-w-4xl px-8">
            <%- content %>
        </main>
    </div>
    <footer class="flex justify-end mt-16">
        <dl class="flex">
            <dt>作成日</dt>
            <dd><% if (locals.CreateDate) { %><%- CreateDate %><% } %></dd>
        </dl>
        <dl class="flex mx-8">
            <dt>更新日</dt>
            <dd><% if (locals.UpdateDate) { %><%- locals.UpdateDate %><% } %></dd>
        </dl>
    </footer>

</body>

</html>