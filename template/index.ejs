<!doctype html>
<html lang="jp">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="description" content="The HTML5 Herald">
    <title>
        <%= metadata.title || 'no name' %>
    </title>
    <script>

        window.addEventListener('DOMContentLoaded', (event) => {
            addModalEvent()
            addImgEvent()
            initCopyEvent()
            addMenuEvent()
        });

        function addMenuEvent() {
            const dialog = document.querySelector('#dialog-menu')
            const dialogMenu = dialog.querySelector('ol')
            const headers = document.querySelectorAll('.container h1')
            headers.forEach((curHeader, index) => {
                curHeader.id = `title_${index}`
                const tarLi = document.createElement('li')
                const tarA = document.createElement('a')
                tarA.href = `#${curHeader.id}`
                tarA.addEventListener('click', () => {
                    dialog.close()
                })

                tarA.innerText = curHeader.innerText
                tarLi.appendChild(tarA)
                dialogMenu.appendChild(tarLi)
            })

            document.querySelector('#icon-menu').addEventListener('click', () => {
                dialog.showModal()
            })
        }

        function addModalEvent() {
            const dialogs = document.querySelectorAll('dialog')

            dialogs.forEach((curDialog) => {
                curDialog.addEventListener('click', () => {
                    curDialog.close()
                })

                const content = curDialog.querySelector('*')
                content.addEventListener('click', () => {
                    event.stopPropagation()
                })
            })
        }

        function initCopyEvent() {
            const templateIconCopy = document.querySelector('#template-icon-copy')
            const iconCopy = templateIconCopy.content.querySelector('.icon-copy')

            const templateIconCopied = document.querySelector('#template-icon-copied')
            const iconCopied = templateIconCopied.content.querySelector('.icon-copied')

            const preList = document.querySelectorAll('pre')
            preList.forEach((tarPre) => {

                const clonedCopy = iconCopy.cloneNode(true)
                const clonedCopied = iconCopied.cloneNode(true)
                clonedCopy.addEventListener('click', () => {

                    const elementCode = clonedCopy.parentNode.querySelector('code')
                    navigator.clipboard.writeText(elementCode.innerText)

                    clonedCopied.classList.add('popup')
                    clonedCopied.addEventListener('animationend', () => {
                        clonedCopied.classList.remove('popup')
                    });

                })
                tarPre.appendChild(clonedCopy)
                tarPre.appendChild(clonedCopied)
            })
        }

        function addImgEvent() {
            const imglist = document.querySelectorAll('.container img')
            const dialog = document.querySelector('dialog#dialog-img')
            const dialogImg = document.querySelector('dialog img')

            imglist.forEach((curImg) => {
                curImg.addEventListener('click', () => {
                    dialogImg.src = curImg.src
                    dialog.showModal()
                })
            })
        }

    </script>
    <style>
        :root {
            --color1: #FFFFFF;
            --color2: #000000;
            --color3: #00196D;
            --color4: #F75652;
            --color5: #d1d5dc;
            --color6: #287100;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, Helvetica Neue, Segoe UI, Hiragino Kaku Gothic ProN, Hiragino Sans, ヒラギノ角ゴ ProN W3, Arial, メイリオ, Meiryo, sans-serif;
        }

        a {
            color: var(--color6);
            text-decoration:none;
            outline: none;
        }

        a:hover{
            text-decoration: underline;
        }

        .area-title {
            width: 100%;
            height: 80vh;
        }

        .container-header{
            width: 80%;
            text-align: center;
            position: relative;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }

        .area-title h1 {
            font-size: 2.4rem;
        }

        .area-title h1::first-letter {
            color: var(--color4);
        }

        .posted-date > *{
            display: inline-block;
        }

        .posted-date .updated-date{
            margin-left: 8px;
        }

        .posted-date dt{
            color: var(--color3);
        }

        .header {
            display: inline-block;
            position: fixed;
            top: 8px;
            left: 16px;
        }

        #icon-menu {
            cursor: pointer;
        }

        .container {
            margin: 0 auto;
            max-width: 780px;
            counter-reset: section;

        }

        .container h1 {
            color: var(--color2);
            font-size: 2rem;
            margin-top: 6.5rem;
            border-bottom: solid 1px var(--color5);
        }

        .container h1::before {
            color: var(--color3);
            counter-increment: section;
            content: counter(section)". "
        }

        .container h2 {
            margin-top: 1.2rem;
            font-size: 1.2rem;
            line-height: 3;
        }

        .container h3 {
            margin-top: 1.2rem;
            font-size: 1.2rem;
            line-height: 3;
        }

        .container p {
            margin-top: 1.2rem;
            line-height: 1.8;
            margin-top: 1.2rem;
        }

        .container pre {
            position: relative;
            margin-top: 16px;
            white-space: pre-wrap;
            line-height: 1.6;
            border: 1px solid var(--color5);
            padding: 8px 4px;
        }

        .container pre code {
            color: var(--color2);
        }

        .container img {
            cursor: pointer;
            display: block;
            margin: 0 auto;
            margin-top: 16px;
            max-width: 640px;
            object-fit: cover;
            border: solid 1px gray;

        }

        .container li {
            margin-top: 1.1rem;
            margin-left: 1.5rem;
        }

        dialog.modal-menu-cover {
            position: fixed;
            transform: translate(-50%, -50%);
            top: 50%;
            left: 50%;
            border: 0;
            border-radius: 0.6rem;
            /* box-shadow: 0 0 1em black; */
            max-width: 640px;
            min-width: 320px;
            min-height: 60vh;
        }

        dialog.modal-menu-cover div {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
        }

        dialog.modal-menu-cover ol {
            margin: 16px 8px;
        }

        dialog.modal-menu-cover li {
            margin-left: 24px;

        }

        dialog.modal-img-cover {
            position: fixed;
            transform: translate(-50%, -50%);
            top: 50%;
            left: 50%;
            border: 0;
            border-radius: 0.6rem;
            /* box-shadow: 0 0 1em black; */
            width: 80%;
            overflow: hidden;
        }

        dialog::backdrop {
            cursor: pointer;
            backdrop-filter: blur(2px);

        }

        dialog.modal-img-cover img {
            object-fit: contain;
            border: 0;
            width: 100%;
            height: 100%;
        }

        svg.icon-copy {
            position: absolute;
            cursor: pointer;
            top: 8px;
            right: 8px;
            opacity: 0;
            transition: opacity 0.2s;
        }

        .icon-copied {
            display: inline-block;
            background: #888888;
            border-radius: 8px;
            position: absolute;
            top: -24px;
            right: -4px;
            font-size: 0.9rem;
            padding: 4px 8px;

            opacity: 0;
            color: white;
        }

        pre:hover svg.icon-copy {
            opacity: 1;
        }

        .popup {
            animation-name: fade;
            animation-duration: 2s;
            animation-timing-function: ease-out;
            animation-iteration-count: 1;
            animation-direction: alternate;
        }

        @keyframes fade {
            0% {
                opacity: 0;
            }

            50% {
                opacity: 1;
            }

            100% {
                opacity: 0;
            }
        }
    </style>
</head>

<body>
    <div class="header">
        <svg id="icon-menu" xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-menu-2" width="24"
            height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round"
            stroke-linejoin="round">
            <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
            <path d="M4 6l16 0"></path>
            <path d="M4 12l16 0"></path>
            <path d="M4 18l16 0"></path>
        </svg>
    </div>

    <div class="area-title">
        <div class="container-header">
            <h1>
                <%= metadata.title || '' %>
            </h1>
            <dl class="posted-date">
                <% if (metadata.createDate) { %>
                <dt>投稿日</dt>
                <dd><%=metadata.createDate || '' %></dd>
                <% } %>
                <% if (metadata.updateDate) { %>
                <dt class="updated-date">更新日</dt>
                <dd><%=metadata.updateDate || '' %></dd>
                <% } %>

            </dl>
        </div>
    </div>
    <div class="container">
        <%- contents %>
    </div>


    <dialog id="dialog-menu" class="modal-menu-cover">
        <div>
            <ol></ol>
        </div>
    </dialog>

    <dialog id="dialog-img" class="modal-img-cover">
        <img src="">
    </dialog>

    <template id="template-icon-copy">
        <svg class="icon-copy" xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-clipboard"
            width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none"
            stroke-linecap="round" stroke-linejoin="round">
            <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
            <path d="M9 5h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2h-2"></path>
            <path d="M9 3m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v0a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z"></path>
        </svg>
    </template>
    <template id="template-icon-copied">
        <div class="icon-copied">copied</div>
    </template>
</body>

</html>